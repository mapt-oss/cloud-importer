apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cloud-importer-replicate-aws
  labels:
    app.kubernetes.io-beta.kubernetes.io/version: "<VERSION>"
  annotations:
    tekton.dev/pipelines.minVersion: "0.44.x"
    tekton.dev/categories: infrastructure
    tekton.dev/tags: infrastructure, aws, replicate
    tekton.dev/displayName: "CloudImporter Replicate AWS"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    This Task replicates an AMI to one or more AWS regions using the cloud-importer tool.
  params:
    - name: image-id
      description: The ID of the AMI to be replicated.
    - name: region
      description: Target region(s) to replicate to, or 'all'.
    - name: id
      description: identifier for the taskrun
    - name: debug
      description: run with deug logs
  workspaces:
    - name: credentials
      description: A workspace containing the cloud provider credentials.
      mountPath: /opt/aws-credentials
  steps:
    - name: run-cloud-importer
      image: <IMAGE>
      script: |
        #!/bin/sh

        set -euo pipefail

        # Function to mask credentials (show first and last char, hide middle)
        mask_credential() {
          local cred="$1"
          local len=${#cred}
          if [ $len -le 2 ]; then
            echo "***"
          else
            echo "${cred:0:1}***${cred: -1}"
          fi
        }

        # Credentials - set these BEFORE enabling debug mode
        export AWS_ACCESS_KEY_ID=$(cat /opt/aws-credentials/access-key)
        export AWS_SECRET_ACCESS_KEY=$(cat /opt/aws-credentials/secret-key)
        export AWS_DEFAULT_REGION=$(cat /opt/aws-credentials/region)
        BUCKET=$(cat /opt/aws-credentials/bucket)

        # If debug add verbosity and print masked credentials
        if [[ "$(params.debug)" == "true" ]]; then
          echo "AWS_ACCESS_KEY_ID=$(mask_credential "$AWS_ACCESS_KEY_ID")"
          echo "AWS_SECRET_ACCESS_KEY=$(mask_credential "$AWS_SECRET_ACCESS_KEY")"
          echo "AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION"
          echo "BUCKET"=$BUCKET
          set -xeuo pipefail
        fi

        cmd="cloud-importer replicate aws "
        cmd+="--image-id $(params.image-id) "
        cmd+="--region $(params.region) "
        cmd+="--backed-url s3://${BUCKET}/cloud-importer/$(params.id) "

        if [[ "$(params.debug)" == "true" ]]; then
          cmd+="--debug"
        fi

        eval ${cmd}
